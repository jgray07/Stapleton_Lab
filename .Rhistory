plot(lstat,medv,pch="+")
plot(1:20,1:20,pch=1:20)
par(mfrow=c(2,2))
plot(lm.fit)
plot(predict(lm.fit), residuals(lm.fit))
plot(predict(lm.fit), rstudent(lm.fit))
plot(hatvalues(lm.fit))
which.max(hatvalues(lm.fit))
# Multiple Linear Regression
lm.fit=lm(medv~lstat+age,data=Boston)
summary(lm.fit)
lm.fit=lm(medv~.,data=Boston)
summary(lm.fit)
summary(lm.fit)$r.sq
summary(lm.fit)$sigma
install.packages("car")
library(car)
vif(lm.fit) #variance inflation factors
lm.fit1=lm(medv~.-age,data=Boston)
summary(lm.fit1)
lm.fit1=update(lm.fit, ~.-age)
# Interaction Terms
summary(lm(medv~lstat*age,data=Boston))
# Non-linear Transformations of the Predictors
lm.fit2=lm(medv~lstat+I(lstat^2))
summary(lm.fit2)
lm.fit=lm(medv~lstat)
anova(lm.fit,lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(medv~poly(lstat,5))
summary(lm.fit5)
summary(lm(medv~log(rm),data=Boston))
# Qualitative Predictors
fix(Carseats)
names(Carseats)
lm.fit=lm(Sales~.+Income:Advertising+Price:Age,data=Carseats)
summary(lm.fit)
attach(Carseats)
contrasts(ShelveLoc)
# Writing Functions
LoadLibraries #Error: object 'LoadLibraries' not found
LoadLibraries() #Error: could not find function "LoadLibraries"
LoadLibraries=function(){
library(ISLR)
library(MASS)
print("The libraries have been loaded.")
}
LoadLibraries
LoadLibraries()
###############################################
## All R-codes used in the Chapter 3 class PPT
###############################################
Advertising=read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv", header=TRUE);
newdata=Advertising[,-1]
fix(newdata)
names(newdata)
pairs(newdata)
#################
## to get Table 3.1
lm.fit=lm(Sales~TV,data=Advertising)
summary(lm.fit)
names(lm.fit)
coef(lm.fit)
confint(lm.fit)
#################
## To get Table 3.4 ##
lm.fit=lm(Sales~TV+Radio+Newspaper,data=Advertising)
summary(lm.fit)
names(lm.fit)
coef(lm.fit)
confint(lm.fit)
#################
## To get Table 3.4 ##
lm.fit1=lm(Sales~Newspaper,data=Advertising)
summary(lm.fit1)
lm.fit2=lm(Sales~Newspaper+TV,data=Advertising)
summary(lm.fit2)
lm.fit3=lm(Sales~Newspaper+TV+Radio,data=Advertising)
summary(lm.fit3)
lm.fit4=lm(Sales~TV+Radio,data=Advertising)
summary(lm.fit4)
#################
par(mfrow=c(2,2))
plot(lm.fit)
plot(predict(lm.fit), residuals(lm.fit))
plot(predict(lm.fit), rstudent(lm.fit))
plot(hatvalues(lm.fit))
which.max(hatvalues(lm.fit))
#################
Credit=read.csv("http://www-bcf.usc.edu/~gareth/ISL/Credit.csv", header=TRUE);
head(Credit); newdata=Credit [,-1]
fix(newdata); names(newdata)
pairs(newdata[,c(1, 2, 4, 5, 6, 7)])
lm.fit=lm(Balance~Gender,data=Credit)
summary(lm.fit); contrasts(Credit$Gender)
lm.fit=lm(Balance~Ethnicity,data=Credit)
summary(lm.fit)
Advertising=read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv", header=TRUE);
lm.fit=lm(Sales~TV*Radio,data=Advertising)
summary(lm.fit)
Credit=read.csv("http://www-bcf.usc.edu/~gareth/ISL/Credit.csv", header=TRUE);
head(Credit); newdata=Credit [,-1]
fix(newdata); names(newdata)
pairs(newdata[,c(1, 2, 4, 5, 6, 7)])
Credit=read.csv("http://www-bcf.usc.edu/~gareth/ISL/Credit.csv", header=TRUE);
lm.fit=lm(Balance~Gender,data=Credit)
summary(lm.fit); contrasts(Credit$Gender)
Credit=read.csv("http://www-bcf.usc.edu/~gareth/ISL/Credit.csv", header=TRUE);
lm.fit=lm(Balance~Ethnicity,data=Credit)
summary(lm.fit)
Advertising=read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv", header=TRUE);
lm.fit=lm(Sales~TV*Radio,data=Advertising)
summary(lm.fit)
fix(Boston)
names(Boston)
library(MASS)
install.packages("ISLR") ## Only need to install once for your own computer
library(ISLR)
install.packages("ISLR")
fix(Boston)
names(Boston)
fix(Boston)
names(Boston)
fix(Boston)
names(Boston)
names(Boston)
fix(Boston)
library(MASS)
install.packages("ISLR") ## Only need to install once for your own computer
library(ISLR)
# Simple Linear Regression
fix(Boston)
names(Boston)
fix(Boston)
library(MASS)
fix(Boston)
# Simple Linear Regression
Boston
fix(boston)
library(ISLR)
names(Boston)
# Chapter 3 Lab: Linear Regression
library(MASS)
install.packages("ISLR") ## Only need to install once for your own computer
library(ISLR)
# Simple Linear Regression
fix(Boston)
install.packages("ISLR")
dat = read.csv("OnlineNewsPopularity.csv", header=TRUE)
OnlineNews=dat[,-c(1:2,6:8,20:30,40:44,49:50,52:53,55:56)]
View(OnlineNews)
names(OnlineNews)
attach(OnlineNews)
install.packages("qtl2", repos="http://rqtl.org/qtl2cran")
install.packages(c("devtools", "yaml", "jsonlite", "data.table", "RcppEigen", "RSQLite", "qtl"))
install.packages(c("devtools", "yaml", "jsonlite", "data.table", "RcppEigen", "RSQLite", "qtl"))
library(devtools)
install_github("rqtl/qtl2")
library(qtl)
set.seed(27599)
test_cross <- qtl::sim.cross(map = qtl::sim.map(len = rep(100, 3), n.mar = 11, eq.spacing = TRUE, include.x = FALSE, anchor.tel = TRUE),
n.ind = 400,
type = 'f2')
test_cross$pheno$sex <- rep(x = c(0, 1), each = 200)
test_cross <- qtl::calc.genoprob(cross = test_cross, step = 2)
test_cross$pheno$phenotype1 <- rnorm(n = qtl::nind(test_cross))
test_cross$pheno$phenotype2 <- rnorm(n = qtl::nind(test_cross),
mean = 0.28*(test_cross$geno$`1`$data[,6] - 2))
test_cross$pheno$phenotype3 <- rnorm(n = qtl::nind(test_cross),
sd = exp(0.23*(test_cross$geno$`2`$data[,6] - 2)))
test_cross$pheno$phenotype4 <- rnorm(n = qtl::nind(test_cross),
mean = 0.24*(test_cross$geno$`3`$data[,6] - 2),
sd = exp(0.16*(test_cross$geno$`3`$data[,6] - 2)))
saveRDS(object = test_cross,
file = '~/Stapleton_Lab/madeuptest_cross.RDS')
setwd("~/Stapleton_Lab")
library(vqtl)
library(ggplot2)
fr <-read.cross(file = "familyrandomsample.csv")
library(vqtl)
library(ggplot2)
fr <-read.cross(file = "familyrandomsample.csv")
library(qtl)
library(vqtl)
library(ggplot2)
fr <-read.cross(file = "familyrandomsample.csv")
fr
#scan with variance
fr <- calc.genoprob(fr)
library(qtl)
library(vqtl)
library(ggplot2)
test_cross <-read.cross(file = "familyrandomsample.csv")
test_cross <- drop.nullmarkers(test_cross)
#scan with variance
test_cross <- calc.genoprob(test_cross)
# do scans in units of LOD scores
so_p1 <- scanone(cross = test_cross, pheno.col = 'PlantHeight', addcovar = test_cross$pheno$plotstructure)
sov_p1 <- scanonevar(cross = test_cross,
mean.formula = PlantHeight ~ plotstructure + mean.QTL.add + mean.QTL.dom,
var.formula = ~plotstructure + var.QTL.add + var.QTL.dom)
sov_p1 <- scanonevar(cross = test_cross,
mean.formula = test_cross$pheno$PlantHeight ~ plotstructure + mean.QTL.add + mean.QTL.dom,
var.formula = ~plotstructure + var.QTL.add + var.QTL.dom)
# do scans in units of LOD scores
so_p1 <- scanone(cross = test_cross, pheno.col = 'PlantHeight', addcovar = test_cross$pheno$plotstructure)
sov_p1 <- scanonevar(cross = test_cross,
mean.formula = test_cross$pheno$PlantHeight ~ test_cross$pheno$plotstructure + mean.QTL.add + mean.QTL.dom,
var.formula = ~test_cross$pheno$plotstructure + var.QTL.add + var.QTL.dom)
# do scans in units of LOD scores
so_p1 <- scanone(cross = test_cross, pheno.col = 'PlantHeight', addcovar = test_cross$pheno$plotstructure)
sov_p1 <- scanonevar(cross = test_cross,
mean.formula = PlantHeight ~ plotstructure * mean.QTL.add ,
var.formula = ~ plotstructure * mean.QTL.add,
return.covar.effects = TRUE)
?scanonevar
sov_p1 <- scanonevar(cross = test_cross)
warnings()
saveRDS(object = list(so_p1 = so_p1, sov_p1 = sov_p1),
file = 'saves/LOD_scans.RDS')
# make scans for fig 1 -- LOD score scans
ymax <- 6
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1, ymax = ymax))
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1, ymax = ymax))
saveRDS(object = list(so_p1 = so_p1, sov_p1 = sov_p1),
file = 'saves/LOD_scans.RDS')
# make scans for fig 1 -- LOD score scans
ymax <- 5
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1, ymax = ymax))
object
saveRDS(object = list(so_p1 = so_p1, sov_p1 = sov_p1),
file = 'saves/FR_LOD_scan.RDS')
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1, ymax = ymax))
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1))#, ymax = ymax))
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1, ymax = ylimit))
# make scans for fig 1 -- LOD score scans
ylimit <- c(0,6)
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1, ymax = ylimit))
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1, ylim = ylimit))
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1, ylim = ylimit))
sov_p1
test_cross
dim(sov_p1)
dim(so_p1)
sov_p1
so_p1
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1))
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1))
?plot.window
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1, xlim = c(0,6), ylim = c(0,6)))
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1))
library(qtl)
library(vqtl)
set.seed(27599)
test_cross <- qtl::sim.cross(map = qtl::sim.map(len = rep(100, 3), n.mar = 11, eq.spacing = TRUE, include.x = FALSE, anchor.tel = TRUE),
n.ind = 400,
type = 'f2' )
test_cross$pheno$sex <- rep(x = c(0, 1), each = 200)
test_cross <- qtl::calc.genoprob(cross = test_cross, step = 2)
test_cross$pheno$phenotype1 <- rnorm(n = qtl::nind(test_cross))
test_cross$pheno$phenotype2 <- rnorm(n = qtl::nind(test_cross),
mean = 0.28*(test_cross$geno$`1`$data[,6] - 2))
test_cross$pheno$phenotype3 <- rnorm(n = qtl::nind(test_cross),
sd = exp(0.23*(test_cross$geno$`2`$data[,6] - 2)))
test_cross$pheno$phenotype4 <- rnorm(n = qtl::nind(test_cross),
mean = 0.24*(test_cross$geno$`3`$data[,6] - 2),
sd = exp(0.16*(test_cross$geno$`3`$data[,6] - 2)))
#
#test_cross = as.data.frame(cbind(test_cross$pheno, t(test_cross$geno)))
#write.csv(test_cross, file = 'cortysimfull.csv')
#write.csv(test_cross$pheno, file = 'cortysim.csv')
#
saveRDS(object = test_cross,
file = 'test_cross.RDS')
test_cross
library(vqtl)
library(ggplot2)
# do scans in units of LOD scores
so_p1 <- scanone(cross = test_cross, pheno.col = 'phenotype1', addcovar = test_cross$pheno$sex)
sov_p1 <- scanonevar(cross = test_cross,
mean.formula = phenotype1 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~sex + var.QTL.add + var.QTL.dom)
so_p2 <- scanone(cross = test_cross, pheno.col = 'phenotype2', addcovar = test_cross$pheno$sex)
sov_p2 <- scanonevar(cross = test_cross,
mean.formula = phenotype2 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~ sex + var.QTL.add + var.QTL.dom)
so_p3 <- scanone(cross = test_cross, pheno.col = 'phenotype3', addcovar = test_cross$pheno$sex)
sov_p3 <- scanonevar(cross = test_cross,
mean.formula = phenotype3 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~sex + var.QTL.add + var.QTL.dom)
so_p4 <- scanone(cross = test_cross, pheno.col = 'phenotype4', addcovar = test_cross$pheno$sex)
sov_p4 <- scanonevar(cross = test_cross,
mean.formula = phenotype4 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~sex + var.QTL.add + var.QTL.dom)
saveRDS(object = list(so_p1 = so_p1, sov_p1 = sov_p1,
so_p2 = so_p2, sov_p2 = sov_p2,
so_p3 = so_p3, sov_p3 = sov_p3,
so_p3 = so_p4, sov_p4 = sov_p4),
file = 'saves/LOD_scans.RDS')
# make scans for fig 1 -- LOD score scans
ymax <- 6
plot(p1_LOD_scan <- plot(x = sov_p1, y = so_p1, ymax = ymax))
plot(p2_LOD_scan <- plot(x = sov_p2, y = so_p2, ymax = ymax))
plot(p3_LOD_scan <- plot(x = sov_p3, y = so_p3, ymax = ymax))
plot(p4_LOD_scan <- plot(x = sov_p4, y = so_p4, ymax = ymax))
ggsave(plot = p1_LOD_scan, filename = 'images/LOD_scan_phen1.pdf', height = 2.5, width = 9)
ggsave(plot = p2_LOD_scan, filename = 'images/LOD_scan_phen2.pdf', height = 2.5, width = 9)
ggsave(plot = p3_LOD_scan, filename = 'images/LOD_scan_phen3.pdf', height = 2.5, width = 9)
ggsave(plot = p4_LOD_scan, filename = 'images/LOD_scan_phen4.pdf', height = 2.5, width = 9)
library(qtl)
library(vqtl)
set.seed(27599)
test_cross <- qtl::sim.cross(map = qtl::sim.map(len = rep(100, 3), n.mar = 11, eq.spacing = TRUE, include.x = FALSE, anchor.tel = TRUE),
n.ind = 400,
type = 'f2' )
test_cross$pheno$sex <- rep(x = c(0, 1), each = 200)
test_cross <- qtl::calc.genoprob(cross = test_cross, step = 2)
test_cross$pheno$phenotype1 <- rnorm(n = qtl::nind(test_cross))
test_cross$pheno$phenotype2 <- rnorm(n = qtl::nind(test_cross),
mean = 0.28*(test_cross$geno$`1`$data[,6] - 2))
test_cross$pheno$phenotype3 <- rnorm(n = qtl::nind(test_cross),
sd = exp(0.23*(test_cross$geno$`2`$data[,6] - 2)))
test_cross$pheno$phenotype4 <- rnorm(n = qtl::nind(test_cross),
mean = 0.24*(test_cross$geno$`3`$data[,6] - 2),
sd = exp(0.16*(test_cross$geno$`3`$data[,6] - 2)))
#
#test_cross = as.data.frame(cbind(test_cross$pheno, t(test_cross$geno)))
#write.csv(test_cross, file = 'cortysimfull.csv')
#write.csv(test_cross$pheno, file = 'cortysim.csv')
#
saveRDS(object = test_cross,
file = 'test_cross.RDS')
library(vqtl)
library(ggplot2)
# do scans in units of LOD scores
so_p1 <- scanone(cross = test_cross, pheno.col = 'phenotype1', addcovar = test_cross$pheno$sex)
sov_p1 <- scanonevar(cross = test_cross,
mean.formula = phenotype1 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~sex + var.QTL.add + var.QTL.dom)
so_p2 <- scanone(cross = test_cross, pheno.col = 'phenotype2', addcovar = test_cross$pheno$sex)
sov_p2 <- scanonevar(cross = test_cross,
mean.formula = phenotype2 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~ sex + var.QTL.add + var.QTL.dom)
so_p3 <- scanone(cross = test_cross, pheno.col = 'phenotype3', addcovar = test_cross$pheno$sex)
sov_p3 <- scanonevar(cross = test_cross,
mean.formula = phenotype3 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~sex + var.QTL.add + var.QTL.dom)
so_p4 <- scanone(cross = test_cross, pheno.col = 'phenotype4', addcovar = test_cross$pheno$sex)
sov_p4 <- scanonevar(cross = test_cross,
mean.formula = phenotype4 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~sex + var.QTL.add + var.QTL.dom)
saveRDS(object = list(so_p1 = so_p1, sov_p1 = sov_p1,
so_p2 = so_p2, sov_p2 = sov_p2,
so_p3 = so_p3, sov_p3 = sov_p3,
so_p3 = so_p4, sov_p4 = sov_p4),
file = 'saves/LOD_scans.RDS')
# make scans for fig 1 -- LOD score scans
ymax <- 6
saveRDS(object = list(so_p1 = so_p1, sov_p1 = sov_p1,
so_p2 = so_p2, sov_p2 = sov_p2,
so_p3 = so_p3, sov_p3 = sov_p3,
so_p3 = so_p4, sov_p4 = sov_p4),
file = 'LOD_scans.RDS')
# do scans in units of LOD scores
so_p1 <- scanone(cross = test_cross, pheno.col = 'phenotype1', addcovar = test_cross$pheno$sex)
sov_p1 <- scanonevar(cross = test_cross,
mean.formula = phenotype1 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~sex + var.QTL.add + var.QTL.dom)
so_p2 <- scanone(cross = test_cross, pheno.col = 'phenotype2', addcovar = test_cross$pheno$sex)
sov_p2 <- scanonevar(cross = test_cross,
mean.formula = phenotype2 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~ sex + var.QTL.add + var.QTL.dom)
setwd("~/Stapleton_Lab")
library(vqtl)
library(ggplot2)
# do scans in units of LOD scores
so_p1 <- scanone(cross = test_cross, pheno.col = 'phenotype1', addcovar = test_cross$pheno$sex)
sov_p1 <- scanonevar(cross = test_cross,
mean.formula = phenotype1 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~sex + var.QTL.add + var.QTL.dom)
setwd("~/Stapleton_Lab/rcorty-vqtl_package_manuscript_supporting_files-d2cd17a 2")
library(qtl)
set.seed(27599)
test_cross <- qtl::sim.cross(map = qtl::sim.map(len = rep(100, 3), n.mar = 11, eq.spacing = TRUE, include.x = FALSE, anchor.tel = TRUE),
n.ind = 400,
type = 'f2')
test_cross$pheno$sex <- rep(x = c(0, 1), each = 200)
test_cross <- qtl::calc.genoprob(cross = test_cross, step = 2)
test_cross$pheno$phenotype1 <- rnorm(n = qtl::nind(test_cross))
test_cross$pheno$phenotype2 <- rnorm(n = qtl::nind(test_cross),
mean = 0.28*(test_cross$geno$`1`$data[,6] - 2))
test_cross$pheno$phenotype3 <- rnorm(n = qtl::nind(test_cross),
sd = exp(0.23*(test_cross$geno$`2`$data[,6] - 2)))
test_cross$pheno$phenotype4 <- rnorm(n = qtl::nind(test_cross),
mean = 0.24*(test_cross$geno$`3`$data[,6] - 2),
sd = exp(0.16*(test_cross$geno$`3`$data[,6] - 2)))
saveRDS(object = test_cross,
file = 'saves/test_cross.RDS')
library(vqtl)
library(ggplot2)
# do scans in units of LOD scores
so_p1 <- scanone(cross = test_cross, pheno.col = 'phenotype1', addcovar = test_cross$pheno$sex)
sov_p1 <- scanonevar(cross = test_cross,
mean.formula = phenotype1 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~sex + var.QTL.add + var.QTL.dom)
library(qtl)
set.seed(27599)
test_cross <- qtl::sim.cross(map = qtl::sim.map(len = rep(100, 3), n.mar = 11, eq.spacing = TRUE, include.x = FALSE, anchor.tel = TRUE),
n.ind = 400,
type = 'f2')
test_cross$pheno$sex <- rep(x = c(0, 1), each = 200)
test_cross <- qtl::calc.genoprob(cross = test_cross, step = 2)
test_cross$pheno$phenotype1 <- rnorm(n = qtl::nind(test_cross))
test_cross$pheno$phenotype2 <- rnorm(n = qtl::nind(test_cross),
mean = 0.28*(test_cross$geno$`1`$data[,6] - 2))
test_cross$pheno$phenotype3 <- rnorm(n = qtl::nind(test_cross),
sd = exp(0.23*(test_cross$geno$`2`$data[,6] - 2)))
test_cross$pheno$phenotype4 <- rnorm(n = qtl::nind(test_cross),
mean = 0.24*(test_cross$geno$`3`$data[,6] - 2),
sd = exp(0.16*(test_cross$geno$`3`$data[,6] - 2)))
saveRDS(object = test_cross,
file = 'saves/test_cross.RDS')
library(qtl)
set.seed(27599)
test_cross <- qtl::sim.cross(map = qtl::sim.map(len = rep(100, 3), n.mar = 11, eq.spacing = TRUE, include.x = FALSE, anchor.tel = TRUE),
n.ind = 400,
type = 'f2')
test_cross$pheno$sex <- rep(x = c(0, 1), each = 200)
test_cross <- qtl::calc.genoprob(cross = test_cross, step = 2)
test_cross$pheno$phenotype1 <- rnorm(n = qtl::nind(test_cross))
test_cross$pheno$phenotype2 <- rnorm(n = qtl::nind(test_cross),
mean = 0.28*(test_cross$geno$`1`$data[,6] - 2))
test_cross$pheno$phenotype3 <- rnorm(n = qtl::nind(test_cross),
sd = exp(0.23*(test_cross$geno$`2`$data[,6] - 2)))
test_cross$pheno$phenotype4 <- rnorm(n = qtl::nind(test_cross),
mean = 0.24*(test_cross$geno$`3`$data[,6] - 2),
sd = exp(0.16*(test_cross$geno$`3`$data[,6] - 2)))
saveRDS(object = test_cross,
file = 'saves/test_cross.RDS')
library(vqtl)
library(ggplot2)
library(qtl)
library(vqtl)
library(ggplot2)
# do scans in units of LOD scores
so_p1 <- scanone(cross = test_cross, pheno.col = 'phenotype1', addcovar = test_cross$pheno$sex)
sov_p1 <- scanonevar(cross = test_cross,
mean.formula = phenotype1 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~sex + var.QTL.add + var.QTL.dom)
library(qtl)
set.seed(27599)
test_cross <- qtl::sim.cross(map = qtl::sim.map(len = rep(100, 3), n.mar = 11, eq.spacing = TRUE, include.x = FALSE, anchor.tel = TRUE),
n.ind = 400,
type = 'f2')
test_cross$pheno$sex <- rep(x = c(0, 1), each = 200)
test_cross <- qtl::calc.genoprob(cross = test_cross, step = 2)
test_cross$pheno$phenotype1 <- rnorm(n = qtl::nind(test_cross))
test_cross$pheno$phenotype2 <- rnorm(n = qtl::nind(test_cross),
mean = 0.28*(test_cross$geno$`1`$data[,6] - 2))
test_cross$pheno$phenotype3 <- rnorm(n = qtl::nind(test_cross),
sd = exp(0.23*(test_cross$geno$`2`$data[,6] - 2)))
test_cross$pheno$phenotype4 <- rnorm(n = qtl::nind(test_cross),
mean = 0.24*(test_cross$geno$`3`$data[,6] - 2),
sd = exp(0.16*(test_cross$geno$`3`$data[,6] - 2)))
library(qtl)
library(vqtl)
library(ggplot2)
# do scans in units of LOD scores
so_p1 <- scanone(cross = test_cross, pheno.col = 'phenotype1', addcovar = test_cross$pheno$sex)
sov_p1 <- scanonevar(cross = test_cross,
mean.formula = phenotype1 ~ sex + mean.QTL.add + mean.QTL.dom,
var.formula = ~sex + var.QTL.add + var.QTL.dom)
library(qtl)
setwd("~/Stapleton_Lab")
library(qtl)
library(vqtl)
library(ggplot2)
test_cross <-read.cross(file = "familyrandomsample.csv")
test_cross <- drop.nullmarkers(test_cross)
#scan with variance
test_cross <- calc.genoprob(test_cross)
# do scans in units of LOD scores
library(vqtl)
library(ggplot2)
#scan with variance
test_cross <- calc.genoprob(test_cross)
so_p1 <- scanone(cross = test_cross, pheno.col = 'PlantHeight', addcovar = test_cross$pheno$plotstructure)
sov_p1 <- scanonevar(cross = test_cross,
mean.formula = PlantHeight ~ plotstructure + mean.QTL.add + mean.QTL.dom,
var.formula = ~plotstructure + var.QTL.add + var.QTL.dom)
so_p1
sov_p1
library(qtl)
library(vqtl)
library(ggplot2)
test_cross <-read.cross(file = "familyandrandom.csv")
test_cross <- drop.nullmarkers(test_cross)
#scan with variance
test_cross <- calc.genoprob(test_cross)
so_p1 <- scanone(cross = test_cross, pheno.col = 'PlantHeight', addcovar = test_cross$pheno$plotstructure)
sov_p1 <- scanonevar(cross = test_cross,
mean.formula = PlantHeight ~ plotstructure + mean.QTL.add + mean.QTL.dom,
var.formula = ~plotstructure + var.QTL.add + var.QTL.dom)
library(qtl)
library(vqtl)
library(ggplot2)
test_cross <-read.cross(file = "familyandrandom.csv")
test_cross <- drop.nullmarkers(test_cross)
#scan with variance
test_cross <- calc.genoprob(test_cross)
so_p1 <- scanone(cross = test_cross, pheno.col = 'PlantHeight', addcovar = test_cross$pheno$plotstructure)
